{"version":3,"file":"editor.worker.js","mappings":"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","sources":["webpack://msc-pl/webpack/bootstrap","webpack://msc-pl/webpack/runtime/global","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/errors.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/functional.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/iterator.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/linkedList.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/event.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/types.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/cache.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/lazy.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/uri.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/position.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/range.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/uint.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/model/prefixSumComputer.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/wordHelper.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/languages/linkComputer.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/languages/supports/inplaceReplaceSupport.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/cancellation.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/tokenizationRegistry.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/codicons.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/languages.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/core/wordCharacterClassifier.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/base/common/objects.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/model.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/model/textModelSearch.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","webpack://msc-pl/./node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\n/**\n * @deprecated use {@link CancellationError `new CancellationError()`} instead\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Returns `true` if this object has been disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\n/**\n * A safe disposable can be `unset` so that a leaked reference (listener)\n * can be cut-off.\n */\nexport class SafeDisposable {\n    constructor() {\n        this.dispose = () => { };\n        this.unset = () => { };\n        this.isset = () => false;\n        trackDisposable(this);\n    }\n    set(fn) {\n        let callback = fn;\n        this.unset = () => callback = undefined;\n        this.isset = () => callback !== undefined;\n        this.dispose = () => {\n            if (callback) {\n                callback();\n                callback = undefined;\n                markAsDisposed(this);\n            }\n        };\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, SafeDisposable, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever an emitter with listeners is disposed. That is a sign of code smell.\n// -----------------------------------------------------------------------------------------------------------------------\nlet _enableDisposeWithListenerWarning = false;\n// _enableDisposeWithListenerWarning = Boolean(\"TRUE\"); // causes a linter warning so that it cannot be pushed\n// -----------------------------------------------------------------------------------------------------------------------\n// Uncomment the next line to print warnings whenever a snapshotted event is used repeatedly without cleanup.\n// See https://github.com/microsoft/vscode/issues/142851\n// -----------------------------------------------------------------------------------------------------------------------\nlet _enableSnapshotPotentialLeakWarning = false;\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    function _addLeakageTraceLogic(options) {\n        if (_enableSnapshotPotentialLeakWarning) {\n            const { onListenerDidAdd: origListenerDidAdd } = options;\n            const stack = Stacktrace.create();\n            let count = 0;\n            options.onListenerDidAdd = () => {\n                if (++count === 2) {\n                    console.warn('snapshotted emitter LIKELY used public and SHOULD HAVE BEEN created with DisposableStore. snapshotted here');\n                    stack.print();\n                }\n                origListenerDidAdd === null || origListenerDidAdd === void 0 ? void 0 : origListenerDidAdd();\n            };\n        }\n    }\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables), disposable);\n    }\n    Event.map = map;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable);\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const options = {\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        };\n        if (!disposable) {\n            _addLeakageTraceLogic(options);\n        }\n        const emitter = new Emitter(options);\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    /**\n     * *NOTE* that this function returns an `Event` and it MUST be called with a `DisposableStore` whenever the returned\n     * event is accessible to \"third parties\", e.g the event is a public property. Otherwise a leaked listener on the\n     * returned event causes this utility to leak a listener on the original event.\n     */\n    function buffer(event, flushAfterTimeout = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n    function runAndSubscribe(event, handler) {\n        handler(undefined);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    function runAndSubscribeWithStore(event, handler) {\n        let store = null;\n        function run(e) {\n            store === null || store === void 0 ? void 0 : store.dispose();\n            store = new DisposableStore();\n            handler(e, store);\n        }\n        run(undefined);\n        const disposable = event(e => run(e));\n        return toDisposable(() => {\n            disposable.dispose();\n            store === null || store === void 0 ? void 0 : store.dispose();\n        });\n    }\n    Event.runAndSubscribeWithStore = runAndSubscribeWithStore;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(stack, listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n}\nclass Stacktrace {\n    constructor(value) {\n        this.value = value;\n    }\n    static create() {\n        var _a;\n        return new Stacktrace((_a = new Error().stack) !== null && _a !== void 0 ? _a : '');\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass Listener {\n    constructor(callback, callbackThis, stack) {\n        this.callback = callback;\n        this.callbackThis = callbackThis;\n        this.stack = stack;\n        this.subscription = new SafeDisposable();\n    }\n    invoke(e) {\n        this.callback.call(this.callbackThis, e);\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    dispose() {\n        var _a, _b, _c, _d;\n        if (!this._disposed) {\n            this._disposed = true;\n            // It is bad to have listeners at the time of disposing an emitter, it is worst to have listeners keep the emitter\n            // alive via the reference that's embedded in their disposables. Therefore we loop over all remaining listeners and\n            // unset their subscriptions/disposables. Looping and blaming remaining listeners is done on next tick because the\n            // the following programming pattern is very popular:\n            //\n            // const someModel = this._disposables.add(new ModelObject()); // (1) create and register model\n            // this._disposables.add(someModel.onDidChange(() => { ... }); // (2) subscribe and register model-event listener\n            // ...later...\n            // this._disposables.dispose(); disposes (1) then (2): don't warn after (1) but after the \"overall dispose\" is done\n            if (this._listeners) {\n                if (_enableDisposeWithListenerWarning) {\n                    const listeners = Array.from(this._listeners);\n                    queueMicrotask(() => {\n                        var _a;\n                        for (const listener of listeners) {\n                            if (listener.subscription.isset()) {\n                                listener.subscription.unset();\n                                (_a = listener.stack) === null || _a === void 0 ? void 0 : _a.print();\n                            }\n                        }\n                    });\n                }\n                this._listeners.clear();\n            }\n            (_a = this._deliveryQueue) === null || _a === void 0 ? void 0 : _a.clear();\n            (_c = (_b = this._options) === null || _b === void 0 ? void 0 : _b.onLastListenerRemove) === null || _c === void 0 ? void 0 : _c.call(_b);\n            (_d = this._leakageMon) === null || _d === void 0 ? void 0 : _d.dispose();\n        }\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (callback, thisArgs, disposables) => {\n                var _a, _b, _c;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.onFirstListenerAdd)) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                let removeMonitor;\n                let stack;\n                if (this._leakageMon && this._listeners.size >= 30) {\n                    // check and record this emitter for potential leakage\n                    stack = Stacktrace.create();\n                    removeMonitor = this._leakageMon.check(stack, this._listeners.size + 1);\n                }\n                if (_enableDisposeWithListenerWarning) {\n                    stack = stack !== null && stack !== void 0 ? stack : Stacktrace.create();\n                }\n                const listener = new Listener(callback, thisArgs, stack);\n                const removeListener = this._listeners.push(listener);\n                if (firstListener && ((_b = this._options) === null || _b === void 0 ? void 0 : _b.onFirstListenerDidAdd)) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if ((_c = this._options) === null || _c === void 0 ? void 0 : _c.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, callback, thisArgs);\n                }\n                const result = listener.subscription.set(() => {\n                    if (removeMonitor) {\n                        removeMonitor();\n                    }\n                    if (!this._disposed) {\n                        removeListener();\n                        if (this._options && this._options.onLastListenerRemove) {\n                            const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                            if (!hasListeners) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                });\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    listener.invoke(event);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n","/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last value.\n * The key must be JSON serializable.\n*/\nexport class LRUCachedComputed {\n    constructor(computeFn) {\n        this.computeFn = computeFn;\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n    }\n    get(arg) {\n        const key = JSON.stringify(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this.computeFn(arg);\n        }\n        return this.lastCache;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    getValue() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedComputed } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    get offset() {\n        return this._offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    get offset() {\n        return this._iterator.offset;\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return AmbiguousCharacters._locales.getValue();\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedComputed((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.getValue();\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new AmbiguousCharacters(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { globals, isWeb } from '../platform.js';\nimport * as types from '../types.js';\nimport * as strings from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, method, args));\n        });\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onFirstListenerAdd: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n            },\n            onLastListenerRemove: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        let reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        let req = requestMessage.req;\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        let transfer = [];\n        if (msg.type === 0 /* Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing dynamic event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                throw new Error(`Malformed event name ${eventName}`);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        if (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globals.require.getConfig();\n        }\n        else if (typeof globals.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globals.requirejs.s.contexts._.config;\n        }\n        const hostMethods = types.getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw new Error(`Missing requestHandler`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globals.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globals.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globals.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(types.getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexport class MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            let mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        let mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        const aLineNumber = a.lineNumber | 0;\n        const bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            const aColumn = a.column | 0;\n            const bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return false.\n     * @internal\n     */\n    static strictContainsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column <= range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n    toJSON() {\n        return this;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        return this._columns[i];\n    }\n    getEndLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getEndColumn(i) {\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        let originalStartLineNumber;\n        let originalStartColumn;\n        let originalEndLineNumber;\n        let originalEndColumn;\n        let modifiedStartLineNumber;\n        let modifiedStartColumn;\n        let modifiedEndLineNumber;\n        let modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { arrayInsert } from '../../../base/common/arrays.js';\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    setValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        const maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    /**\n     * Returns the sum of the first `index + 1` many items.\n     * @returns `SUM(0 <= j <= index, values[j])`.\n     */\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum);\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n/**\n * {@link getIndexOf} has an amortized runtime complexity of O(1).\n *\n * ({@link PrefixSumComputer.getIndexOf} is just  O(log n))\n*/\nexport class ConstantTimePrefixSumComputer {\n    constructor(values) {\n        this._values = values;\n        this._isValid = false;\n        this._validEndIndex = -1;\n        this._prefixSum = [];\n        this._indexBySum = [];\n    }\n    /**\n     * @returns SUM(0 <= j < values.length, values[j])\n     */\n    getTotalSum() {\n        this._ensureValid();\n        return this._indexBySum.length;\n    }\n    /**\n     * Returns the sum of the first `count` many items.\n     * @returns `SUM(0 <= j < count, values[j])`.\n     */\n    getPrefixSum(count) {\n        this._ensureValid();\n        if (count === 0) {\n            return 0;\n        }\n        return this._prefixSum[count - 1];\n    }\n    /**\n     * @returns `result`, such that `getPrefixSum(result.index) + result.remainder = sum`\n     */\n    getIndexOf(sum) {\n        this._ensureValid();\n        const idx = this._indexBySum[sum];\n        const viewLinesAbove = idx > 0 ? this._prefixSum[idx - 1] : 0;\n        return new PrefixSumIndexOfResult(idx, sum - viewLinesAbove);\n    }\n    removeValues(start, deleteCount) {\n        this._values.splice(start, deleteCount);\n        this._invalidate(start);\n    }\n    insertValues(insertIndex, insertArr) {\n        this._values = arrayInsert(this._values, insertIndex, insertArr);\n        this._invalidate(insertIndex);\n    }\n    _invalidate(index) {\n        this._isValid = false;\n        this._validEndIndex = Math.min(this._validEndIndex, index - 1);\n    }\n    _ensureValid() {\n        if (this._isValid) {\n            return;\n        }\n        for (let i = this._validEndIndex + 1, len = this._values.length; i < len; i++) {\n            const value = this._values[i];\n            const sumAbove = i > 0 ? this._prefixSum[i - 1] : 0;\n            this._prefixSum[i] = sumAbove + value;\n            for (let j = 0; j < value; j++) {\n                this._indexBySum[sumAbove + j] = i;\n            }\n        }\n        // trim things\n        this._prefixSum.length = this._values.length;\n        this._indexBySum.length = this._prefixSum[this._prefixSum.length - 1];\n        // mark as valid\n        this._isValid = true;\n        this._validEndIndex = this._values.length - 1;\n    }\n    setValue(index, value) {\n        if (this._values[index] === value) {\n            // no change\n            return;\n        }\n        this._values[index] = value;\n        this._invalidate(index);\n    }\n}\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from './prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.setValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        const insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        const newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        const defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        const asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        const value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        // allow-any-unicode-next-line\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 42 /* Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 124 /* Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 32 /* Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    let chClass;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        let n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 127 /* MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* NumpadClear */, 'NumpadClear', 126 /* Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    let seenKeyCode = [];\n    let seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* Unknown */)\n                    && (keyCode !== 3 /* Enter */)\n                    && (keyCode !== 5 /* Ctrl */)\n                    && (keyCode !== 4 /* Shift */)\n                    && (keyCode !== 6 /* Alt */)\n                    && (keyCode !== 57 /* Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* UpArrow */:\n                return 'Up';\n            case 18 /* DownArrow */:\n                return 'Down';\n            case 15 /* LeftArrow */:\n                return 'Left';\n            case 17 /* RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Get the position at the start of the selection.\n    */\n    getSelectionStart() {\n        return new Position(this.selectionStartLineNumber, this.selectionStartColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Creates a `Selection` from a range, given a direction.\n     */\n    static fromRange(range, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        }\n        else {\n            return new Selection(range.endLineNumber, range.endColumn, range.startLineNumber, range.startColumn);\n        }\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../base/common/lifecycle.js';\nexport class TokenizationRegistry {\n    constructor() {\n        this._map = new Map();\n        this._factories = new Map();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._colorMap = null;\n    }\n    fire(languages) {\n        this._onDidChange.fire({\n            changedLanguages: languages,\n            changedColorMap: false\n        });\n    }\n    register(language, support) {\n        this._map.set(language, support);\n        this.fire([language]);\n        return toDisposable(() => {\n            if (this._map.get(language) !== support) {\n                return;\n            }\n            this._map.delete(language);\n            this.fire([language]);\n        });\n    }\n    registerFactory(languageId, factory) {\n        var _a;\n        (_a = this._factories.get(languageId)) === null || _a === void 0 ? void 0 : _a.dispose();\n        const myData = new TokenizationSupportFactoryData(this, languageId, factory);\n        this._factories.set(languageId, myData);\n        return toDisposable(() => {\n            const v = this._factories.get(languageId);\n            if (!v || v !== myData) {\n                return;\n            }\n            this._factories.delete(languageId);\n            v.dispose();\n        });\n    }\n    getOrCreate(languageId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // check first if the support is already set\n            const tokenizationSupport = this.get(languageId);\n            if (tokenizationSupport) {\n                return tokenizationSupport;\n            }\n            const factory = this._factories.get(languageId);\n            if (!factory || factory.isResolved) {\n                // no factory or factory.resolve already finished\n                return null;\n            }\n            yield factory.resolve();\n            return this.get(languageId);\n        });\n    }\n    get(language) {\n        return (this._map.get(language) || null);\n    }\n    isResolved(languageId) {\n        const tokenizationSupport = this.get(languageId);\n        if (tokenizationSupport) {\n            return true;\n        }\n        const factory = this._factories.get(languageId);\n        if (!factory || factory.isResolved) {\n            return true;\n        }\n        return false;\n    }\n    setColorMap(colorMap) {\n        this._colorMap = colorMap;\n        this._onDidChange.fire({\n            changedLanguages: Array.from(this._map.keys()),\n            changedColorMap: true\n        });\n    }\n    getColorMap() {\n        return this._colorMap;\n    }\n    getDefaultBackground() {\n        if (this._colorMap && this._colorMap.length > 2 /* DefaultBackground */) {\n            return this._colorMap[2 /* DefaultBackground */];\n        }\n        return null;\n    }\n}\nclass TokenizationSupportFactoryData extends Disposable {\n    constructor(_registry, _languageId, _factory) {\n        super();\n        this._registry = _registry;\n        this._languageId = _languageId;\n        this._factory = _factory;\n        this._isDisposed = false;\n        this._resolvePromise = null;\n        this._isResolved = false;\n    }\n    get isResolved() {\n        return this._isResolved;\n    }\n    dispose() {\n        this._isDisposed = true;\n        super.dispose();\n    }\n    resolve() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._resolvePromise) {\n                this._resolvePromise = this._create();\n            }\n            return this._resolvePromise;\n        });\n    }\n    _create() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = yield Promise.resolve(this._factory.createTokenizationSupport());\n            this._isResolved = true;\n            if (value && !this._isDisposed) {\n                this._register(this._registry.register(this._languageId, value));\n            }\n        });\n    }\n}\n","// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should define new, UI component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be named as default.\n */\nexport class Codicon {\n    constructor(id, definition, description) {\n        this.id = id;\n        this.definition = definition;\n        this.description = description;\n        Codicon._allCodicons.push(this);\n    }\n    get classNames() { return 'codicon codicon-' + this.id; }\n    // classNamesArray is useful for migrating to ES6 classlist\n    get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n    get cssSelector() { return '.codicon.codicon-' + this.id; }\n    /**\n     * @returns Returns all default icons covered by the codicon font. Only to be used by the icon registry in platform.\n     */\n    static getAll() {\n        return Codicon._allCodicons;\n    }\n}\n// registry\nCodicon._allCodicons = [];\n// built-in icons, with image name\nCodicon.add = new Codicon('add', { fontCharacter: '\\\\ea60' });\nCodicon.plus = new Codicon('plus', Codicon.add.definition);\nCodicon.gistNew = new Codicon('gist-new', Codicon.add.definition);\nCodicon.repoCreate = new Codicon('repo-create', Codicon.add.definition);\nCodicon.lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\nCodicon.lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\nCodicon.repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\nCodicon.repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\nCodicon.gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\nCodicon.repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\nCodicon.gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\nCodicon.gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\nCodicon.recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\nCodicon.keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\nCodicon.tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\nCodicon.tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\nCodicon.tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\nCodicon.person = new Codicon('person', { fontCharacter: '\\\\ea67' });\nCodicon.personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\nCodicon.personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\nCodicon.personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\nCodicon.gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\nCodicon.gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\nCodicon.gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\nCodicon.sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\nCodicon.mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\nCodicon.mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\nCodicon.star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\nCodicon.starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\nCodicon.starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\nCodicon.starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\nCodicon.comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\nCodicon.commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\nCodicon.alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\nCodicon.warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\nCodicon.search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\nCodicon.searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\nCodicon.logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\nCodicon.signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\nCodicon.logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\nCodicon.signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\nCodicon.eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\nCodicon.eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\nCodicon.eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\nCodicon.circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\nCodicon.primitiveDot = new Codicon('primitive-dot', { fontCharacter: '\\\\ea71' });\nCodicon.closeDirty = new Codicon('close-dirty', { fontCharacter: '\\\\ea71' });\nCodicon.debugBreakpoint = new Codicon('debug-breakpoint', { fontCharacter: '\\\\ea71' });\nCodicon.debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { fontCharacter: '\\\\ea71' });\nCodicon.debugHint = new Codicon('debug-hint', { fontCharacter: '\\\\ea71' });\nCodicon.primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\nCodicon.edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\nCodicon.pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\nCodicon.info = new Codicon('info', { fontCharacter: '\\\\ea74' });\nCodicon.issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\nCodicon.gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\nCodicon.gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\nCodicon.lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\nCodicon.mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\nCodicon.close = new Codicon('close', { fontCharacter: '\\\\ea76' });\nCodicon.removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\nCodicon.x = new Codicon('x', { fontCharacter: '\\\\ea76' });\nCodicon.repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\nCodicon.sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\nCodicon.clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\nCodicon.desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\nCodicon.beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\nCodicon.microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\nCodicon.vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\nCodicon.deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\nCodicon.file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\nCodicon.fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\nCodicon.more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\nCodicon.ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\nCodicon.kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\nCodicon.mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\nCodicon.reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\nCodicon.organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\nCodicon.organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\nCodicon.organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\nCodicon.newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\nCodicon.fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\nCodicon.newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\nCodicon.fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\nCodicon.trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\nCodicon.trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\nCodicon.history = new Codicon('history', { fontCharacter: '\\\\ea82' });\nCodicon.clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\nCodicon.folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\nCodicon.fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\nCodicon.symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\nCodicon.logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\nCodicon.markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\nCodicon.github = new Codicon('github', { fontCharacter: '\\\\ea84' });\nCodicon.terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\nCodicon.console = new Codicon('console', { fontCharacter: '\\\\ea85' });\nCodicon.repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\nCodicon.zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\nCodicon.symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\nCodicon.error = new Codicon('error', { fontCharacter: '\\\\ea87' });\nCodicon.stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\nCodicon.variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\nCodicon.symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\nCodicon.array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\nCodicon.symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\nCodicon.symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\nCodicon.symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\nCodicon.symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\nCodicon.symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\nCodicon.symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\nCodicon.symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\nCodicon.symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\nCodicon.symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\nCodicon.symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\nCodicon.symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\nCodicon.symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\nCodicon.symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\nCodicon.symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\nCodicon.goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\nCodicon.symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\nCodicon.symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\nCodicon.symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\nCodicon.symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\nCodicon.activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\nCodicon.archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\nCodicon.arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\nCodicon.arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\nCodicon.arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\nCodicon.arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\nCodicon.arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\nCodicon.arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\nCodicon.arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\nCodicon.arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\nCodicon.arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\nCodicon.bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\nCodicon.bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\nCodicon.book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\nCodicon.bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\nCodicon.debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\nCodicon.debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\nCodicon.debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\nCodicon.debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\nCodicon.debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\nCodicon.debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\nCodicon.debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\nCodicon.debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\nCodicon.debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\nCodicon.briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\nCodicon.broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\nCodicon.browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\nCodicon.bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\nCodicon.calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\nCodicon.caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\nCodicon.check = new Codicon('check', { fontCharacter: '\\\\eab2' });\nCodicon.checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\nCodicon.chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\nCodicon.dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\nCodicon.chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\nCodicon.chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\nCodicon.chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\nCodicon.chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\nCodicon.chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\nCodicon.chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\nCodicon.chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\nCodicon.circleOutline = new Codicon('circle-outline', { fontCharacter: '\\\\eabc' });\nCodicon.debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { fontCharacter: '\\\\eabc' });\nCodicon.circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\nCodicon.circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\nCodicon.clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\nCodicon.clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\nCodicon.closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\nCodicon.cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\nCodicon.cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\nCodicon.code = new Codicon('code', { fontCharacter: '\\\\eac4' });\nCodicon.collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\nCodicon.colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\nCodicon.commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\nCodicon.compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\nCodicon.creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\nCodicon.dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\nCodicon.dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\nCodicon.database = new Codicon('database', { fontCharacter: '\\\\eace' });\nCodicon.debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\nCodicon.debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\nCodicon.debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\nCodicon.debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\nCodicon.debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\nCodicon.debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\nCodicon.debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\nCodicon.debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\nCodicon.debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\nCodicon.debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\nCodicon.deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\nCodicon.deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\nCodicon.deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\nCodicon.diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\nCodicon.diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\nCodicon.diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\nCodicon.diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\nCodicon.diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\nCodicon.diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\nCodicon.discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\nCodicon.editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\nCodicon.emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\nCodicon.exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\nCodicon.extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\nCodicon.eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\nCodicon.fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\nCodicon.fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\nCodicon.fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\nCodicon.filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\nCodicon.fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\nCodicon.fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\nCodicon.fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\nCodicon.fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\nCodicon.files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\nCodicon.filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\nCodicon.flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\nCodicon.foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\nCodicon.foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\nCodicon.fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\nCodicon.folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\nCodicon.folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\nCodicon.gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\nCodicon.gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\nCodicon.gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\nCodicon.gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\nCodicon.gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\nCodicon.gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\nCodicon.gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\nCodicon.githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\nCodicon.githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\nCodicon.globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\nCodicon.grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\nCodicon.graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\nCodicon.gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\nCodicon.heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\nCodicon.home = new Codicon('home', { fontCharacter: '\\\\eb06' });\nCodicon.horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\nCodicon.hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\nCodicon.inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\nCodicon.issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\nCodicon.issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\nCodicon.issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\nCodicon.italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\nCodicon.jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\nCodicon.json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\nCodicon.kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\nCodicon.key = new Codicon('key', { fontCharacter: '\\\\eb11' });\nCodicon.law = new Codicon('law', { fontCharacter: '\\\\eb12' });\nCodicon.lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\nCodicon.linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\nCodicon.link = new Codicon('link', { fontCharacter: '\\\\eb15' });\nCodicon.listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\nCodicon.listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\nCodicon.liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\nCodicon.loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\nCodicon.location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\nCodicon.mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\nCodicon.mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\nCodicon.markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\nCodicon.megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\nCodicon.mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\nCodicon.milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\nCodicon.mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\nCodicon.move = new Codicon('move', { fontCharacter: '\\\\eb22' });\nCodicon.multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\nCodicon.mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\nCodicon.noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\nCodicon.note = new Codicon('note', { fontCharacter: '\\\\eb26' });\nCodicon.octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\nCodicon.openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\nCodicon.package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\nCodicon.paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\nCodicon.pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\nCodicon.play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\nCodicon.run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\nCodicon.plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\nCodicon.preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\nCodicon.preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\nCodicon.project = new Codicon('project', { fontCharacter: '\\\\eb30' });\nCodicon.pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\nCodicon.question = new Codicon('question', { fontCharacter: '\\\\eb32' });\nCodicon.quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\nCodicon.radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\nCodicon.reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\nCodicon.references = new Codicon('references', { fontCharacter: '\\\\eb36' });\nCodicon.refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\nCodicon.regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\nCodicon.remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\nCodicon.remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\nCodicon.remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\nCodicon.replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\nCodicon.replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\nCodicon.repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\nCodicon.repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\nCodicon.repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\nCodicon.repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\nCodicon.report = new Codicon('report', { fontCharacter: '\\\\eb42' });\nCodicon.requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\nCodicon.rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\nCodicon.rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\nCodicon.rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\nCodicon.rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\nCodicon.ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\nCodicon.saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\nCodicon.saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\nCodicon.save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\nCodicon.screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\nCodicon.screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\nCodicon.searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\nCodicon.server = new Codicon('server', { fontCharacter: '\\\\eb50' });\nCodicon.settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\nCodicon.settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\nCodicon.shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\nCodicon.smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\nCodicon.sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\nCodicon.splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\nCodicon.splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\nCodicon.squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\nCodicon.starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\nCodicon.starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\nCodicon.symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\nCodicon.symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\nCodicon.symbolCustomColor = new Codicon('symbol-customcolor', { fontCharacter: '\\\\eb5c' });\nCodicon.symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\nCodicon.symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\nCodicon.symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\nCodicon.symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\nCodicon.symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\nCodicon.symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\nCodicon.symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\nCodicon.symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\nCodicon.symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\nCodicon.wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\nCodicon.wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\nCodicon.symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\nCodicon.tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\nCodicon.telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\nCodicon.textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\nCodicon.threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\nCodicon.thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\nCodicon.thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\nCodicon.tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\nCodicon.triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\nCodicon.triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\nCodicon.triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\nCodicon.triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\nCodicon.twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\nCodicon.unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\nCodicon.unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\nCodicon.unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\nCodicon.unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\nCodicon.verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\nCodicon.versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\nCodicon.vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\nCodicon.vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\nCodicon.vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\nCodicon.watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\nCodicon.whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\nCodicon.wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\nCodicon.window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\nCodicon.wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\nCodicon.zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\nCodicon.zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\nCodicon.listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\nCodicon.listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\nCodicon.listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\nCodicon.selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\nCodicon.listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\nCodicon.debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\nCodicon.debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\nCodicon.debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\nCodicon.debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\nCodicon.debugStackframeDot = new Codicon('debug-stackframe-dot', { fontCharacter: '\\\\eb8a' });\nCodicon.debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\nCodicon.debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\nCodicon.debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\nCodicon.symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\nCodicon.debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\nCodicon.debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\nCodicon.debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\nCodicon.callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\nCodicon.callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\nCodicon.menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\nCodicon.expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\nCodicon.feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\nCodicon.groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\nCodicon.ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\nCodicon.account = new Codicon('account', { fontCharacter: '\\\\eb99' });\nCodicon.bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\nCodicon.debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\nCodicon.library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\nCodicon.output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\nCodicon.runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\nCodicon.syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\nCodicon.pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\nCodicon.githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\nCodicon.debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\nCodicon.serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\nCodicon.serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\nCodicon.pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\nCodicon.stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\nCodicon.playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\nCodicon.record = new Codicon('record', { fontCharacter: '\\\\eba7' });\nCodicon.debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\nCodicon.vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\nCodicon.cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\nCodicon.merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\nCodicon.exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\nCodicon.graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\nCodicon.magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\nCodicon.notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\nCodicon.redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\nCodicon.checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\nCodicon.pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\nCodicon.passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\nCodicon.circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\nCodicon.circleLargeOutline = new Codicon('circle-large-outline', { fontCharacter: '\\\\ebb5' });\nCodicon.combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\nCodicon.gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\nCodicon.table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\nCodicon.variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\nCodicon.typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\nCodicon.typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\nCodicon.typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\nCodicon.gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\nCodicon.runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\nCodicon.runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\nCodicon.notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\nCodicon.debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\nCodicon.workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\nCodicon.workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\nCodicon.workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\nCodicon.terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\nCodicon.terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\nCodicon.terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\nCodicon.terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\nCodicon.terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\nCodicon.terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\nCodicon.terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\nCodicon.arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\nCodicon.copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\nCodicon.personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\nCodicon.filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\nCodicon.wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\nCodicon.debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\nCodicon.inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\nCodicon.layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\nCodicon.layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\nCodicon.layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\nCodicon.compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\nCodicon.compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\nCodicon.compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\nCodicon.azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\nCodicon.issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\nCodicon.gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\nCodicon.gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\nCodicon.debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\nCodicon.debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\nCodicon.runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\nCodicon.folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\nCodicon.debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\nCodicon.beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\nCodicon.graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\nCodicon.graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\nCodicon.pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\nCodicon.bracket = new Codicon('bracket', Codicon.json.definition);\nCodicon.bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\nCodicon.bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\nCodicon.lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\nCodicon.azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\nCodicon.verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\nCodicon.newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\nCodicon.layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\nCodicon.layoutActivitybarLeft = new Codicon('layout-activitybar-left', { fontCharacter: '\\\\ebec' });\nCodicon.layoutActivitybarRight = new Codicon('layout-activitybar-right', { fontCharacter: '\\\\ebed' });\nCodicon.layoutPanelLeft = new Codicon('layout-panel-left', { fontCharacter: '\\\\ebee' });\nCodicon.layoutPanelCenter = new Codicon('layout-panel-center', { fontCharacter: '\\\\ebef' });\nCodicon.layoutPanelJustify = new Codicon('layout-panel-justify', { fontCharacter: '\\\\ebf0' });\nCodicon.layoutPanelRight = new Codicon('layout-panel-right', { fontCharacter: '\\\\ebf1' });\nCodicon.layoutPanel = new Codicon('layout-panel', { fontCharacter: '\\\\ebf2' });\nCodicon.layoutSidebarLeft = new Codicon('layout-sidebar-left', { fontCharacter: '\\\\ebf3' });\nCodicon.layoutSidebarRight = new Codicon('layout-sidebar-right', { fontCharacter: '\\\\ebf4' });\nCodicon.layoutStatusbar = new Codicon('layout-statusbar', { fontCharacter: '\\\\ebf5' });\nCodicon.layoutMenubar = new Codicon('layout-menubar', { fontCharacter: '\\\\ebf6' });\nCodicon.layoutCentered = new Codicon('layout-centered', { fontCharacter: '\\\\ebf7' });\nCodicon.target = new Codicon('target', { fontCharacter: '\\\\ebf8' });\nCodicon.indent = new Codicon('indent', { fontCharacter: '\\\\ebf9' });\nCodicon.recordSmall = new Codicon('record-small', { fontCharacter: '\\\\ebfa' });\nCodicon.errorSmall = new Codicon('error-small', { fontCharacter: '\\\\ebfb' });\nCodicon.arrowCircleDown = new Codicon('arrow-circle-down', { fontCharacter: '\\\\ebfc' });\nCodicon.arrowCircleLeft = new Codicon('arrow-circle-left', { fontCharacter: '\\\\ebfd' });\nCodicon.arrowCircleRight = new Codicon('arrow-circle-right', { fontCharacter: '\\\\ebfe' });\nCodicon.arrowCircleUp = new Codicon('arrow-circle-up', { fontCharacter: '\\\\ebff' });\n// derived icons, that could become separate icons\nCodicon.dialogError = new Codicon('dialog-error', Codicon.error.definition);\nCodicon.dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\nCodicon.dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\nCodicon.dialogClose = new Codicon('dialog-close', Codicon.close.definition);\nCodicon.treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\nCodicon.treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\nCodicon.treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\nCodicon.treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\nCodicon.treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\nCodicon.menuSelection = new Codicon('menu-selection', Codicon.check.definition);\nCodicon.menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\nCodicon.menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\nCodicon.scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\nCodicon.scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\nCodicon.scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\nCodicon.scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\nCodicon.toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\nCodicon.quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\nexport var CSSIcon;\n(function (CSSIcon) {\n    CSSIcon.iconNameSegment = '[A-Za-z0-9]+';\n    CSSIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    CSSIcon.iconModifierExpression = '~[A-Za-z]+';\n    CSSIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const cssIconIdRegex = new RegExp(`^(${CSSIcon.iconNameExpression})(${CSSIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        if (icon instanceof Codicon) {\n            return ['codicon', 'codicon-' + icon.id];\n        }\n        const match = cssIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        let [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substr(1));\n        }\n        return classNames;\n    }\n    CSSIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    CSSIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    CSSIcon.asCSSSelector = asCSSSelector;\n})(CSSIcon || (CSSIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { URI } from '../../base/common/uri.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistryImpl } from './tokenizationRegistry.js';\nimport { Codicon } from '../../base/common/codicons.js';\n/**\n * @internal\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 15360 /* FONT_STYLE_MASK */) >>> 10 /* FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 8372224 /* FOREGROUND_MASK */) >>> 14 /* FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4286578688 /* BACKGROUND_MASK */) >>> 23 /* BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* Italic */),\n            bold: Boolean(fontStyle & 2 /* Bold */),\n            underline: Boolean(fontStyle & 4 /* Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* Strikethrough */),\n        };\n    }\n}\nexport class Token {\n    constructor(offset, type, language) {\n        this._tokenBrand = undefined;\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this._tokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationResult {\n    constructor(tokens, endState) {\n        this._encodedTokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n/**\n * @internal\n */\nexport var CompletionItemKinds;\n(function (CompletionItemKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* Method */, Codicon.symbolMethod);\n    byKind.set(1 /* Function */, Codicon.symbolFunction);\n    byKind.set(2 /* Constructor */, Codicon.symbolConstructor);\n    byKind.set(3 /* Field */, Codicon.symbolField);\n    byKind.set(4 /* Variable */, Codicon.symbolVariable);\n    byKind.set(5 /* Class */, Codicon.symbolClass);\n    byKind.set(6 /* Struct */, Codicon.symbolStruct);\n    byKind.set(7 /* Interface */, Codicon.symbolInterface);\n    byKind.set(8 /* Module */, Codicon.symbolModule);\n    byKind.set(9 /* Property */, Codicon.symbolProperty);\n    byKind.set(10 /* Event */, Codicon.symbolEvent);\n    byKind.set(11 /* Operator */, Codicon.symbolOperator);\n    byKind.set(12 /* Unit */, Codicon.symbolUnit);\n    byKind.set(13 /* Value */, Codicon.symbolValue);\n    byKind.set(15 /* Enum */, Codicon.symbolEnum);\n    byKind.set(14 /* Constant */, Codicon.symbolConstant);\n    byKind.set(15 /* Enum */, Codicon.symbolEnum);\n    byKind.set(16 /* EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(17 /* Keyword */, Codicon.symbolKeyword);\n    byKind.set(27 /* Snippet */, Codicon.symbolSnippet);\n    byKind.set(18 /* Text */, Codicon.symbolText);\n    byKind.set(19 /* Color */, Codicon.symbolColor);\n    byKind.set(20 /* File */, Codicon.symbolFile);\n    byKind.set(21 /* Reference */, Codicon.symbolReference);\n    byKind.set(22 /* Customcolor */, Codicon.symbolCustomColor);\n    byKind.set(23 /* Folder */, Codicon.symbolFolder);\n    byKind.set(24 /* TypeParameter */, Codicon.symbolTypeParameter);\n    byKind.set(25 /* User */, Codicon.account);\n    byKind.set(26 /* Issue */, Codicon.issues);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = new Map();\n    data.set('method', 0 /* Method */);\n    data.set('function', 1 /* Function */);\n    data.set('constructor', 2 /* Constructor */);\n    data.set('field', 3 /* Field */);\n    data.set('variable', 4 /* Variable */);\n    data.set('class', 5 /* Class */);\n    data.set('struct', 6 /* Struct */);\n    data.set('interface', 7 /* Interface */);\n    data.set('module', 8 /* Module */);\n    data.set('property', 9 /* Property */);\n    data.set('event', 10 /* Event */);\n    data.set('operator', 11 /* Operator */);\n    data.set('unit', 12 /* Unit */);\n    data.set('value', 13 /* Value */);\n    data.set('constant', 14 /* Constant */);\n    data.set('enum', 15 /* Enum */);\n    data.set('enum-member', 16 /* EnumMember */);\n    data.set('enumMember', 16 /* EnumMember */);\n    data.set('keyword', 17 /* Keyword */);\n    data.set('snippet', 27 /* Snippet */);\n    data.set('text', 18 /* Text */);\n    data.set('color', 19 /* Color */);\n    data.set('file', 20 /* File */);\n    data.set('reference', 21 /* Reference */);\n    data.set('customcolor', 22 /* Customcolor */);\n    data.set('folder', 23 /* Folder */);\n    data.set('type-parameter', 24 /* TypeParameter */);\n    data.set('typeParameter', 24 /* TypeParameter */);\n    data.set('account', 25 /* User */);\n    data.set('issue', 26 /* Issue */);\n    /**\n     * @internal\n     */\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = 9 /* Property */;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * @internal\n */\nexport function isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\n/**\n * @internal\n */\nexport var SymbolKinds;\n(function (SymbolKinds) {\n    const byKind = new Map();\n    byKind.set(0 /* File */, Codicon.symbolFile);\n    byKind.set(1 /* Module */, Codicon.symbolModule);\n    byKind.set(2 /* Namespace */, Codicon.symbolNamespace);\n    byKind.set(3 /* Package */, Codicon.symbolPackage);\n    byKind.set(4 /* Class */, Codicon.symbolClass);\n    byKind.set(5 /* Method */, Codicon.symbolMethod);\n    byKind.set(6 /* Property */, Codicon.symbolProperty);\n    byKind.set(7 /* Field */, Codicon.symbolField);\n    byKind.set(8 /* Constructor */, Codicon.symbolConstructor);\n    byKind.set(9 /* Enum */, Codicon.symbolEnum);\n    byKind.set(10 /* Interface */, Codicon.symbolInterface);\n    byKind.set(11 /* Function */, Codicon.symbolFunction);\n    byKind.set(12 /* Variable */, Codicon.symbolVariable);\n    byKind.set(13 /* Constant */, Codicon.symbolConstant);\n    byKind.set(14 /* String */, Codicon.symbolString);\n    byKind.set(15 /* Number */, Codicon.symbolNumber);\n    byKind.set(16 /* Boolean */, Codicon.symbolBoolean);\n    byKind.set(17 /* Array */, Codicon.symbolArray);\n    byKind.set(18 /* Object */, Codicon.symbolObject);\n    byKind.set(19 /* Key */, Codicon.symbolKey);\n    byKind.set(20 /* Null */, Codicon.symbolNull);\n    byKind.set(21 /* EnumMember */, Codicon.symbolEnumMember);\n    byKind.set(22 /* Struct */, Codicon.symbolStruct);\n    byKind.set(23 /* Event */, Codicon.symbolEvent);\n    byKind.set(24 /* Operator */, Codicon.symbolOperator);\n    byKind.set(25 /* TypeParameter */, Codicon.symbolTypeParameter);\n    /**\n     * @internal\n     */\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}));\nexport class FoldingRangeKind {\n    /**\n     * Creates a new {@link FoldingRangeKind}.\n     *\n     * @param value of the kind.\n     */\n    constructor(value) {\n        this.value = value;\n    }\n}\n/**\n * Kind for folding range representing a comment. The value of the kind is 'comment'.\n */\nFoldingRangeKind.Comment = new FoldingRangeKind('comment');\n/**\n * Kind for folding range representing a import. The value of the kind is 'imports'.\n */\nFoldingRangeKind.Imports = new FoldingRangeKind('imports');\n/**\n * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n * The value of the kind is 'region'.\n */\nFoldingRangeKind.Region = new FoldingRangeKind('region');\n/**\n * @internal\n */\nexport var Command;\n(function (Command) {\n    /**\n     * @internal\n     */\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 12] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 13] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 14] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 15] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 16] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 17] = \"colorDecorators\";\n    EditorOption[EditorOption[\"columnSelection\"] = 18] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 19] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 20] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 21] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 22] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 23] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 24] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 25] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 26] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 27] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 28] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 29] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 30] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 31] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 32] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 33] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 34] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 35] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 36] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 37] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 38] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 39] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 40] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 41] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 42] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 43] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 44] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 45] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 46] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 47] = \"fontWeight\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 48] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 49] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 50] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 51] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 52] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 53] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 54] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 55] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 56] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 57] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 58] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 59] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 60] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 61] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 62] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 63] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 64] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 65] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 66] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 67] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 68] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 69] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 70] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 71] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 72] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 73] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 74] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 75] = \"padding\";\n    EditorOption[EditorOption[\"parameterHints\"] = 76] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 77] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 78] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 79] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 80] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 81] = \"readOnly\";\n    EditorOption[EditorOption[\"renameOnType\"] = 82] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 83] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 84] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 85] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 86] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 87] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 88] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 89] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 90] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 91] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 92] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 93] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 94] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 95] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 96] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 97] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 98] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 99] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 100] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 101] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 102] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 103] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 104] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 105] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 106] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 107] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 108] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 109] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 110] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 111] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 112] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 113] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 114] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 115] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 116] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 117] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 118] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 119] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 120] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 121] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 122] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 123] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 124] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 125] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 126] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 127] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 128] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 129] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 130] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 131] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 132] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 80] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 81] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 82] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 83] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 84] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 85] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 86] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 87] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 88] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 89] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 90] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 92] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 93] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 94] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 95] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 96] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 97] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 98] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 99] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 100] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 101] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 102] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 103] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 104] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 106] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 107] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 108] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 112] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 113] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 114] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 115] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 116] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 117] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 118] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 119] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 120] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 121] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 122] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 123] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 124] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 125] = \"LaunchApp2\";\n    /**\n     * VK_CLEAR, 0x0C, CLEAR key\n     */\n    KeyCode[KeyCode[\"Clear\"] = 126] = \"Clear\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 127] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var PositionAffinity;\n(function (PositionAffinity) {\n    /**\n     * Prefers the left most position.\n    */\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    /**\n     * Prefers the right most position.\n    */\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    /**\n     * No preference.\n    */\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n})(PositionAffinity || (PositionAffinity = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from './characterClassifier.js';\nexport class WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators) {\n        super(0 /* Regular */);\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), 2 /* WordSeparator */);\n        }\n        this.set(32 /* Space */, 1 /* Whitespace */);\n        this.set(9 /* Tab */, 1 /* Whitespace */);\n    }\n}\nfunction once(computeFn) {\n    const cache = {}; // TODO@Alex unbounded cache\n    return (input) => {\n        if (!cache.hasOwnProperty(input)) {\n            cache[input] = computeFn(input);\n        }\n        return cache[input];\n    };\n}\nexport const getMapForWordSeparators = once((input) => new WordCharacterClassifier(input));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        // See https://github.com/microsoft/TypeScript/issues/10990\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            result[key] = deepClone(obj[key]);\n        }\n        else {\n            result[key] = obj[key];\n        }\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (let i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n    const result = fn(obj);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { equals } from '../../base/common/objects.js';\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\nexport var InjectedTextCursorStops;\n(function (InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {}));\nexport class TextModelResolvedOptions {\n    /**\n     * @internal\n     */\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        this.indentSize = src.tabSize | 0;\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    /**\n     * @internal\n     */\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    /**\n     * @internal\n     */\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nexport class FindMatch {\n    /**\n     * @internal\n     */\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\n/**\n * @internal\n */\nexport class SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\n/**\n * @internal\n */\nexport function shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { getMapForWordSeparators } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { FindMatch, SearchData } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nexport class SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        // Try to create a RegExp out of the params\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = strings.createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            // casing might make a difference\n            canUseSimpleSearch = this.matchCase;\n        }\n        return new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null, canUseSimpleSearch ? this.searchString : null);\n    }\n}\nexport function isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === 92 /* Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === 110 /* n */ || nextChCode === 114 /* r */ || nextChCode === 87 /* W */) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nexport function createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return new FindMatch(range, null);\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return new FindMatch(range, matches);\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === 10 /* LineFeed */) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            // no line feeds\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            // before first line feed\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    // bingo!\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nexport class TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    /**\n     * Multiline search always executes on the lines concatenated with \\n.\n     * We must therefore compensate for the count of \\n in case the model is CRLF\n     */\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(searchRange, 1 /* LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        // Early case for a search range that starts & stops on the same line number\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        // Collect results from first line\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        // Collect results from middle lines\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        // Collect results from last line\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        let m;\n        // Reset regex to search from the beginning\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = new Position(searchStart.lineNumber, 1);\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        // We always execute multiline search over the lines joined with \\n\n        // This makes it that \\n will match the EOL for both CRLF and LF models\n        // We compensate for offset errors in `_getMultilineMatchRange`\n        const text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), 1 /* LF */);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n        searcher.reset(searchStart.column - 1);\n        let m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            // Try again from the top\n            return this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        // Set regex to search from column\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            // Try again with all content\n            return this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        // Look in first line\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        // Match starts at start of string\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== 0 /* Regular */) {\n        // The character before the match is a word separator\n        return true;\n    }\n    if (charBefore === 13 /* CarriageReturn */ || charBefore === 10 /* LineFeed */) {\n        // The character before the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== 0 /* Regular */) {\n            // The first character inside the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        // Match ends at end of string\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== 0 /* Regular */) {\n        // The character after the match is a word separator\n        return true;\n    }\n    if (charAfter === 13 /* CarriageReturn */ || charAfter === 10 /* LineFeed */) {\n        // The character after the match is line break or carriage return.\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== 0 /* Regular */) {\n            // The last character in the match is a word separator\n            return true;\n        }\n    }\n    return false;\n}\nexport function isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nexport class Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                // Reached the end of the line\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    // the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n                    // we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n                    if (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                // Exit early if the regex matches the same range twice\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/types.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\nexport class UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n        }\n        else {\n            regex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n        }\n        const searcher = new Searcher(null, regex);\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            // Reset regex to search from the beginning\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    // Extend range to entire code point\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (strings.isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    const word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== 0 /* None */) {\n                        if (highlightReason === 3 /* Ambiguous */) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === 2 /* Invisible */) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === 1 /* NonBasicASCII */) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever(highlightReason);\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = new CodePointHighlighter(options);\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case 0 /* None */:\n                return null;\n            case 2 /* Invisible */:\n                return { kind: 1 /* Invisible */ };\n            case 3 /* Ambiguous */: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = strings.AmbiguousCharacters.getLocales().filter((l) => !strings.AmbiguousCharacters.getInstance(new Set([...options.allowedLocales, l])).isAmbiguous(codePoint));\n                return { kind: 0 /* Ambiguous */, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case 1 /* NonBasicASCII */:\n                return { kind: 2 /* NonBasicAscii */ };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${strings.escapeRegExpCharacters(codePoints.map((i) => String.fromCodePoint(i)).join(''))}]`;\n    return src;\n}\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = new Set(options.allowedCodePoints);\n        this.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = new Set();\n        if (this.options.invisibleCharacters) {\n            for (const cp of strings.InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (this.allowedCodePoints.has(codePoint)) {\n            return 0 /* None */;\n        }\n        if (this.options.nonBasicASCII) {\n            return 1 /* NonBasicASCII */;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (let char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII = strings.isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n                if (!isBasicASCII &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n        /* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n            /* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter) {\n            return 0 /* None */;\n        }\n        if (this.options.invisibleCharacters) {\n            // TODO check for emojis\n            if (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return 2 /* Invisible */;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return 3 /* Ambiguous */;\n            }\n        }\n        return 0 /* None */;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    computeUnicodeHighlights(url, options, range) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(url);\n            if (!model) {\n                return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n            }\n            return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n        });\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            const originalLines = original.getLinesContent();\n            const modifiedLines = modified.getLinesContent();\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true,\n                maxComputationTime: maxComputationTime\n            });\n            const diffResult = diffComputer.computeDiff();\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return {\n                quitEarly: diffResult.quitEarly,\n                identical: identical,\n                changes: diffResult.changes\n            };\n        });\n    }\n    _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                const aRng = a.range ? 0 : 1;\n                const bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, false);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch(true);\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (let url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (let word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                const words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            const selectionText = model.getValueInRange(range);\n            const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            const word = model.getValueInRange(wordRange);\n            const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        self.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    self.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","ErrorHandler","constructor","listeners","unexpectedErrorHandler","setTimeout","stack","Error","message","emit","forEach","listener","onUnexpectedError","onUnexpectedExternalError","errorHandler","isCancellationError","transformErrorForSerialization","error","name","stacktrace","$isError","canceledName","CancellationError","super","NotSupportedError","once","fn","_this","result","didCall","apply","arguments","Iterable","is","thing","Symbol","iterator","_empty","Object","freeze","empty","single","element","from","iterable","isEmpty","next","done","first","value","some","predicate","find","filter","map","index","concat","iterables","concatNested","reduce","reducer","initialValue","slice","arr","to","length","consume","atMost","Number","POSITIVE_INFINITY","consumed","i","push","equals","a","b","comparator","at","bt","ai","bi","an","bn","TRACK_DISPOSABLES","disposableTracker","setDisposableTracker","tracker","__is_disposable_tracked__","trackDisposable","x","console","log","setParent","child","parent","None","_a","markAsDisposed","disposable","markAsSingleton","setParentOfDisposable","setParentOfDisposables","children","MultiDisposeError","errors","join","dispose","arg","d","Array","isArray","combinedDisposable","disposables","toDisposable","self","DisposableStore","_toDispose","Set","_isDisposed","clear","isDisposed","values","add","o","DISABLE_DISPOSED_WARNING","warn","_store","_register","SafeDisposable","unset","isset","set","callback","undefined","Node","Undefined","prev","_first","_last","_size","size","node","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","res","pop","anchor","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_language","_translationsConfigFile","nodeProcess","vscode","process","isElectronProcess","versions","electron","isElectronRenderer","type","navigator","platform","env","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","indexOf","maxTouchPoints","language","_platform","isWindows","isMacintosh","importScripts","postMessage","pending","addEventListener","data","vscodeScheduleAsyncWork","len","candidate","id","splice","lastId","myId","isChrome","hasPerformanceNow","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","static","stop","elapsed","Date","now","_enableDisposeWithListenerWarning","_enableSnapshotPotentialLeakWarning","Event","_addLeakageTraceLogic","options","onListenerDidAdd","origListenerDidAdd","Stacktrace","create","count","print","event","thisArgs","didFire","call","snapshot","each","signal","any","events","merge","initial","output","onFirstListenerAdd","emitter","fire","onLastListenerRemove","Emitter","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","split","isT","buffer","flushAfterTimeout","_buffer","flush","onFirstListenerDidAdd","ChainableEvent","on","chain","fromNodeEventEmitter","eventName","args","removeListener","fromDOMEventEmitter","removeEventListener","toPromise","Promise","resolve","runAndSubscribe","handler","runAndSubscribeWithStore","store","run","EventProfiling","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","start","listenerCount","_stopWatch","info","toFixed","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","Math","random","toString","_warnCountdown","_stacks","check","threshold","Map","get","topStack","topCount","Listener","callbackThis","invoke","_disposed","_options","_leakageMon","_perfMon","_profName","_b","_c","_d","_listeners","queueMicrotask","_deliveryQueue","_event","firstListener","removeMonitor","hasListeners","getAllPropertyNames","obj","proto","getPrototypeOf","prototype","getOwnPropertyNames","getAllMethodNames","methods","prop","createProxyObject","methodNames","createProxyMethod","method","methodName","assertNever","LRUCachedComputed","computeFn","lastCache","lastArgKey","key","stringify","Lazy","executor","_didRun","getValue","_value","err","_error","rawValue","escapeRegExpCharacters","replace","splitLines","str","firstNonWhitespaceIndex","chCode","charCodeAt","lastNonWhitespaceIndex","startIndex","isUpperAsciiLetter","code","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","offset","nextCharCode","IS_BASIC_ASCII","test","String","fromCharCode","GraphemeBreakTree","_data","getGraphemeBreakRawData","_INSTANCE","getGraphemeBreakType","codePoint","nodeCount","nodeIndex","AmbiguousCharacters","confusableDictionary","locales","_locales","isAmbiguous","has","getPrimaryConfusable","getConfusableCodePoints","keys","ambiguousCharacterData","arrayToMap","mergeMaps","map1","map2","intersectMaps","languageSpecificMap","filteredLocales","l","startsWith","commonMap","k","InvisibleCharacters","getRawData","getData","codePoints","INITIALIZE","safeProcess","RequestMessage","vsWorker","req","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","setWorkerId","workerId","sendMessage","reject","_send","listen","delete","handleMessage","_handleMessage","msg","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","then","r","detail","handleEvent","transfer","ArrayBuffer","propertyIsEvent","propertyIsDynamicEvent","proxyListen","createProxyDynamicEvent","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","onmessage","initialize","loaderConfig","moduleId","hostMethods","proxyMethodRequest","hostProxy","baseUrl","paths","vs","trustedTypesPolicy","catchError","module","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","numberHash","val","initialHashVal","stringHash","s","hashVal","leftRotate","bits","totalBits","delta","mask","fill","dest","byteLength","leftPad","char","toHexString","bufferOrValue","bitsize","Uint8Array","padStart","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","strLen","buff","buffLen","leftoverHighSurrogate","_push","_step","digest","_wrapUp","ml","setUint32","floor","bigBlock32","_bigBlock32","j","getUint32","f","temp","c","StringDiffSequence","source","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","sequence","elements","_isStringArray","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","originalElement","_getStrictElement","modifiedElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","endStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","touchingPreviousChange","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","originalScore","modifiedScore","left","right","Copy","diagonalBaseIndex","diagonalsBelow","diagonalsAbove","diffEven","lowerBoundEven","upperBoundEven","sandboxProcess","arch","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","expected","actual","determiner","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","bind","ret","delimiter","posix","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_schemeFix","_referenceResolution","_slash","_regexp","schemeOrData","fsPath","with","uriToFsPath","Uri","match","exec","percentDecode","idx","substring","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","toJSON","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","aColumn","bColumn","clone","startLineNumber","startColumn","endLineNumber","endColumn","range","containsPosition","position","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","getStartPosition","setEndPosition","setStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","aEndColumn","bEndColumn","aExists","bExists","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","diffAlgo","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","shouldIgnoreTrimWhitespace","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","getStartColumn","getEndColumn","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","postProcessCharChanges","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","matchingLength","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","createFromDiffChange","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","originalChar","modifiedChar","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","maximumRuntime","startTime","toUint8","v","toUint32","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","insertValues","insertIndex","oldValues","oldPrefixSum","insertValuesLen","subarray","setValue","removeValues","maxCount","getTotalSum","_getPrefixSum","getPrefixSum","getIndexOf","sum","low","high","mid","midStop","midStart","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","version","getText","onEvents","_acceptDeleteRange","_acceptInsertText","text","_ensureLineStarts","eolLength","linesLength","lineStartValues","_setLineText","lineIndex","newValue","insertText","insertLines","newLengths","USUAL_WORD_SEPARATORS","createWordRegExp","allowInWords","RegExp","DEFAULT_WORD_REGEXP","ensureValidWordDefinition","wordDefinition","global","flags","ignoreCase","multiline","unicode","lastIndex","_defaultConfig","maxLen","windowSize","timeBudget","getWordAtText","textOffset","config","t1","prevRegexIndex","regexIndex","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","asciiMap","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","nextState","currentState","_stateMachine","getStateMachine","_classifier","getClassifier","FORCE_TERMINATION_CHARACTERS","CANNOT_END_WITH_CHARACTERS","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","chClass","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","_createLink","computeLinks","BasicInplaceReplace","_defaultValueSet","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","shortcutEvent","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","CancellationTokenSource","_token","_parentListener","token","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","KeyChord","secondPart","chordPart","mappings","seenKeyCode","seenScanCode","mapping","_keyCodeOrd","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","equalsSelection","selectionsEqual","getDirection","getPosition","getSelectionStart","direction","sel","CSSIcon","CompletionItemKinds","InlineCompletionTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKinds","Command","InlayHintKind","__awaiter","thisArg","_arguments","P","generator","adopt","fulfilled","step","rejected","TokenizationRegistry","_factories","_onDidChange","onDidChange","_colorMap","languages","changedLanguages","changedColorMap","register","support","registerFactory","languageId","factory","myData","TokenizationSupportFactoryData","getOrCreate","tokenizationSupport","isResolved","setColorMap","colorMap","getColorMap","getDefaultBackground","_registry","_languageId","_factory","_resolvePromise","_isResolved","_create","createTokenizationSupport","Codicon","definition","description","_allCodicons","classNames","classNamesArray","cssSelector","fontCharacter","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","tagAdd","tagRemove","person","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","primitiveSquare","edit","pencil","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","variable","symbolVariable","array","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","caseSensitive","checklist","chevronDown","dropDownButton","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","debugBreakpointUnverified","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","compareChanges","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","diff","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueClosed","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","location","mailRead","mail","markdown","megaphone","mention","milestone","mortarBoard","move","multipleWindows","mute","noNewline","note","octoface","openPreview","package_","paintcan","pin","play","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","references","refresh","regex","remoteExplorer","remote","remove","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolCustomColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","whitespace","wholeWord","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","debugStackframeDot","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","callIncoming","callOutgoing","menu","expandAll","feedback","groupByRefType","ungroupByRefType","account","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","debugAlt","serverProcess","serverEnvironment","pass","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","exportIcon","graphLeft","magnet","notebook","redo","checkAll","pinnedDirty","passFilled","circleLargeFilled","circleLargeOutline","combine","gather","table","variableGroup","typeHierarchy","typeHierarchySub","typeHierarchySuper","gitPullRequestCreate","runAbove","runBelow","notebookTemplate","debugRerun","workspaceTrusted","workspaceUntrusted","workspaceUnspecified","terminalCmd","terminalDebian","terminalLinux","terminalPowershell","terminalTmux","terminalUbuntu","terminalBash","arrowSwap","copy","personAdd","filterFilled","wand","debugLineByLine","inspect","layers","layersDot","layersActive","compass","compassDot","compassActive","azure","issueDraft","gitPullRequestClosed","gitPullRequestDraft","debugAll","debugCoverage","runErrors","folderLibrary","debugContinueSmall","beakerStop","graphLine","graphScatter","pieChart","bracket","bracketDot","bracketError","lockSmall","azureDevops","verifiedFilled","newLine","layout","layoutActivitybarLeft","layoutActivitybarRight","layoutPanelLeft","layoutPanelCenter","layoutPanelJustify","layoutPanelRight","layoutPanel","layoutSidebarLeft","layoutSidebarRight","layoutStatusbar","layoutMenubar","layoutCentered","target","indent","recordSmall","errorSmall","arrowCircleDown","arrowCircleLeft","arrowCircleRight","arrowCircleUp","dialogError","dialogWarning","dialogInfo","dialogClose","treeItemExpanded","treeFilterOnTypeOn","treeFilterOnTypeOff","treeFilterClear","treeItemLoading","menuSelection","menuSubmenu","menuBarMore","scrollbarButtonLeft","scrollbarButtonRight","scrollbarButtonUp","scrollbarButtonDown","toolBarMore","quickInputBack","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","cssIconIdRegex","asClassNameArray","icon","modifier","asClassName","asCSSSelector","Token","_tokenBrand","byKind","toIcon","kind","codicon","strict","FoldingRangeKind","Comment","Imports","Region","title","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InjectedTextCursorStops","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","KeyMod","createMonacoBaseAPI","editor","Position","Range","CtrlCmd","Shift","Alt","WinCtrl","WordCharacterClassifier","wordSeparators","input","hasOwnProperty","leftIsWordBounday","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","rightIsWordBounday","charAfter","lastCharInMatch","isValidMatch","Searcher","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","reset","m","UnicodeTextModelHighlighter","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","buildRegExpCharClassExpr","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineLength","charCodeBefore","highlightReason","shouldHighlightNonBasicASCII","MAX_RESULT_LENGTH","reason","codePointAt","primaryConfusable","ambiguousCharacters","notAmbiguousInLocales","allowedLocales","confusableWith","fromCodePoint","src","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII","MirrorModel","getLinesContent","getWordAtPosition","wordAtText","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","getLineWords","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","offsetAt","_validatePosition","positionAt","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","all","acceptNewModel","EOL","acceptModelChanged","strURL","acceptRemovedModel","computeUnicodeHighlights","originalUrl","modifiedUrl","ignoreTrimWhitespace","diffComputer","identical","_modelsAreIdentical","originalLineCount","modifiedLineCount","computeMoreMinimalEdits","modelUrl","edits","lastEol","sort","aRng","bRng","_diffLimit","editOffset","newEdit","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","_suggestionsLimit","duration","computeWordRanges","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","fhr","foreignHost","ctx","getMirrorModels","fmr","initialized","foreignModule","simpleWorker"],"sourceRoot":""}